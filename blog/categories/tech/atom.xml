<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tech | BootDB]]></title>
  <link href="http://www.bootdb.com/blog/categories/tech/atom.xml" rel="self"/>
  <link href="http://www.bootdb.com/"/>
  <updated>2017-01-10T19:08:55+05:30</updated>
  <id>http://www.bootdb.com/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to Remove AppEngine OAuth Tokens]]></title>
    <link href="http://www.bootdb.com/remove-appengine-oauth-tokens/"/>
    <updated>2016-12-12T21:24:28+05:30</updated>
    <id>http://www.bootdb.com/remove-appengine-oauth-tokens</id>
    <content type="html"><![CDATA[<p>In order to delete the AppEngine OAuth tokens, delete the file <strong>c:/Users//.appcfg_oauth2_tokens</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[List of SQL Injection Strings]]></title>
    <link href="http://www.bootdb.com/list-of-sql-injection-strings/"/>
    <updated>2016-12-12T19:55:20+05:30</updated>
    <id>http://www.bootdb.com/list-of-sql-injection-strings</id>
    <content type="html"><![CDATA[<p>Below are the list of SQL injection strings:</p>

<pre><code>' or 1=1--

" or 1=1--

or 1=1--

' or 'a'='a

" or "a"="a

') or ('a'='a

") or ("a"="a
</code></pre>

<p>&nbsp;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Office365 Email Settings]]></title>
    <link href="http://www.bootdb.com/office365-email-settings/"/>
    <updated>2016-12-12T19:52:37+05:30</updated>
    <id>http://www.bootdb.com/office365-email-settings</id>
    <content type="html"><![CDATA[<p>Below are the office365 email settings in the following format</p>

<pre>Server name
Port
Encryption method</pre>


<p><strong>POP3</strong></p>

<pre>outlook.office365.com
995
SSL</pre>


<p><strong>IMAP4</strong></p>

<pre>outlook.office365.com
993
SSL</pre>


<p><strong>SMTP</strong></p>

<pre>smtp.office365.com
587
TLS</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Array List of MySQL Keywords]]></title>
    <link href="http://www.bootdb.com/array-list-of-mysql-keywords/"/>
    <updated>2016-11-15T14:53:21+05:30</updated>
    <id>http://www.bootdb.com/array-list-of-mysql-keywords</id>
    <content type="html"><![CDATA[<p>All 612 MySQL keywords and reserved words have been listed atÂ <a href="https://dev.mysql.com/doc/refman/5.5/en/keywords.html">dev.mysql.com/doc/refman/5.5/en/keywords.html</a>, however I you would like to use those in programming languages it should be converted into an array, I&#8217;ve written a simple script to convert the table into array list.</p>

<pre><code>var elements = $("code.literal");
var keywords = [];
for(var i=0;i&lt;elements.length;i++){
    keywords.push(elements[i].innerHTML);
}
console.log(JSON.stringify(keywords));
</code></pre>

<p>This is the generated array from above script:</p>

<pre><code>["SELECT","DELETE","BIGINT","BEGIN","END","INTERVAL","COUNT","_FILENAME","GROUP","ACCESSIBLE","ACTION","ADD","AFTER","AGAINST","AGGREGATE","ALGORITHM","ALL","ALTER","ANALYZE","AND","ANY","AS","ASC","ASCII","ASENSITIVE","AT","AUTHORS","AUTOEXTEND_SIZE","AUTO_INCREMENT","AVG","AVG_ROW_LENGTH","BACKUP","BEFORE","BEGIN","BETWEEN","BIGINT","BINARY","BINLOG","BIT","BLOB","BLOCK","BOOL","BOOLEAN","BOTH","BTREE","BY","BYTE","CACHE","CALL","CASCADE","CASCADED","CASE","CATALOG_NAME","CHAIN","CHANGE","CHANGED","CHAR","CHARACTER","CHARSET","CHECK","CHECKSUM","CIPHER","CLASS_ORIGIN","CLIENT","CLOSE","COALESCE","CODE","COLLATE","COLLATION","COLUMN","COLUMNS","COLUMN_NAME","COMMENT","COMMIT","COMMITTED","COMPACT","COMPLETION","COMPRESSED","CONCURRENT","CONDITION","CONNECTION","CONSISTENT","CONSTRAINT","CONSTRAINT_CATALOG","CONSTRAINT_NAME","CONSTRAINT_SCHEMA","CONTAINS","CONTEXT","CONTINUE","CONTRIBUTORS","CONVERT","CPU","CREATE","CROSS","CUBE","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","CURSOR_NAME","DATA","DATABASE","DATABASES","DATAFILE","DATE","DATETIME","DAY","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DEALLOCATE","DEC","DECIMAL","DECLARE","DEFAULT","DEFINER","DELAYED","DELAY_KEY_WRITE","DELETE","DESC","DESCRIBE","DES_KEY_FILE","DETERMINISTIC","DIRECTORY","DISABLE","DISCARD","DISK","DISTINCT","DISTINCTROW","DIV","DO","DOUBLE","DROP","DUAL","DUMPFILE","DUPLICATE","DYNAMIC","EACH","ELSE","ELSEIF","ENABLE","ENCLOSED","END","ENDS","ENGINE","ENGINES","ENUM","ERROR","ERRORS","ESCAPE","ESCAPED","EVENT","EVENTS","EVERY","EXECUTE","EXISTS","EXIT","EXPANSION","EXPLAIN","EXTENDED","EXTENT_SIZE","FALSE","FAST","FAULTS","FETCH","FIELDS","FILE","FIRST","FIXED","FLOAT","FLOAT4","FLOAT8","FLUSH","FOR","FORCE","FOREIGN","FOUND","FRAC_SECOND","FROM","FULL","FULLTEXT","FUNCTION","GENERAL","GEOMETRY","GEOMETRYCOLLECTION","GET_FORMAT","GLOBAL","GRANT","GRANTS","GROUP","HANDLER","HASH","HAVING","HELP","HIGH_PRIORITY","HOST","HOSTS","HOUR","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IDENTIFIED","IF","IGNORE","IGNORE_SERVER_IDS","IMPORT","IN","INDEX","INDEXES","INFILE","INITIAL_SIZE","INNER","INNOBASE","INNODB","INOUT","INSENSITIVE","INSERT","INSERT_METHOD","INSTALL","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","INTERVAL","INTO","INVOKER","IO","IO_THREAD","IPC","IS","ISOLATION","ISSUER","ITERATE","JOIN","KEY","KEYS","KEY_BLOCK_SIZE","KILL","LANGUAGE","LAST","LEADING","LEAVE","LEAVES","LEFT","LESS","LEVEL","LIKE","LIMIT","LINEAR","LINES","LINESTRING","LIST","LOAD","LOCAL","LOCALTIME","LOCALTIMESTAMP","LOCK","LOCKS","LOGFILE","LOGS","LONG","LONGBLOB","LONGTEXT","LOOP","LOW_PRIORITY","MASTER","MASTER_CONNECT_RETRY","MASTER_HEARTBEAT_PERIOD","MASTER_HOST","MASTER_LOG_FILE","MASTER_LOG_POS","MASTER_PASSWORD","MASTER_PORT","MASTER_SERVER_ID","MASTER_SSL","MASTER_SSL_CA","MASTER_SSL_CAPATH","MASTER_SSL_CERT","MASTER_SSL_CIPHER","MASTER_SSL_KEY","MASTER_SSL_VERIFY_SERVER_CERT","MASTER_USER","MATCH","MAXVALUE","MAX_CONNECTIONS_PER_HOUR","MAX_QUERIES_PER_HOUR","MAX_ROWS","MAX_SIZE","MAX_UPDATES_PER_HOUR","MAX_USER_CONNECTIONS","MEDIUM","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MEMORY","MERGE","MESSAGE_TEXT","MICROSECOND","MIDDLEINT","MIGRATE","MINUTE","MINUTE_MICROSECOND","MINUTE_SECOND","MIN_ROWS","MOD","MODE","MODIFIES","MODIFY","MONTH","MULTILINESTRING","MULTIPOINT","MULTIPOLYGON","MUTEX","MYSQL_ERRNO","NAME","NAMES","NATIONAL","NATURAL","NCHAR","NDB","NDBCLUSTER","NEW","NEXT","NO","NODEGROUP","NONE","NOT","NO_WAIT","NO_WRITE_TO_BINLOG","NULL","NUMERIC","NVARCHAR","OFFSET","OLD_PASSWORD","ON","ONE","ONE_SHOT","OPEN","OPTIMIZE","OPTION","OPTIONALLY","OPTIONS","OR","ORDER","OUT","OUTER","OUTFILE","OWNER","PACK_KEYS","PAGE","PARSER","PARTIAL","PARTITION","PARTITIONING","PARTITIONS","PASSWORD","PHASE","PLUGIN","PLUGINS","POINT","POLYGON","PORT","PRECISION","PREPARE","PRESERVE","PREV","PRIMARY","PRIVILEGES","PROCEDURE","PROCESSLIST","PROFILE","PROFILES","PROXY","PURGE","QUARTER","QUERY","QUICK","RANGE","READ","READS","READ_ONLY","READ_WRITE","REAL","REBUILD","RECOVER","REDOFILE","REDO_BUFFER_SIZE","REDUNDANT","REFERENCES","REGEXP","RELAY","RELAYLOG","RELAY_LOG_FILE","RELAY_LOG_POS","RELAY_THREAD","RELEASE","RELOAD","REMOVE","RENAME","REORGANIZE","REPAIR","REPEAT","REPEATABLE","REPLACE","REPLICATION","REQUIRE","RESET","RESIGNAL","RESTORE","RESTRICT","RESUME","RETURN","RETURNS","REVOKE","RIGHT","RLIKE","ROLLBACK","ROLLUP","ROUTINE","ROW","ROWS","ROW_FORMAT","RTREE","SAVEPOINT","SCHEDULE","SCHEMA","SCHEMAS","SCHEMA_NAME","SECOND","SECOND_MICROSECOND","SECURITY","SELECT","SENSITIVE","SEPARATOR","SERIAL","SERIALIZABLE","SERVER","SESSION","SET","SHARE","SHOW","SHUTDOWN","SIGNAL","SIGNED","SIMPLE","SLAVE","SLOW","SMALLINT","SNAPSHOT","SOCKET","SOME","SONAME","SOUNDS","SOURCE","SPATIAL","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_BIG_RESULT","SQL_BUFFER_RESULT","SQL_CACHE","SQL_CALC_FOUND_ROWS","SQL_NO_CACHE","SQL_SMALL_RESULT","SQL_THREAD","SQL_TSI_DAY","SQL_TSI_FRAC_SECOND","SQL_TSI_HOUR","SQL_TSI_MINUTE","SQL_TSI_MONTH","SQL_TSI_QUARTER","SQL_TSI_SECOND","SQL_TSI_WEEK","SQL_TSI_YEAR","SSL","START","STARTING","STARTS","STATUS","STOP","STORAGE","STRAIGHT_JOIN","STRING","SUBCLASS_ORIGIN","SUBJECT","SUBPARTITION","SUBPARTITIONS","SUPER","SUSPEND","SWAPS","SWITCHES","TABLE","TABLES","TABLESPACE","TABLE_CHECKSUM","TABLE_NAME","TEMPORARY","TEMPTABLE","TERMINATED","TEXT","THAN","THEN","TIME","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TINYBLOB","TINYINT","TINYTEXT","TO","TRAILING","TRANSACTION","TRIGGER","TRIGGERS","TRUE","TRUNCATE","TYPE","TYPES","UNCOMMITTED","UNDEFINED","UNDO","UNDOFILE","UNDO_BUFFER_SIZE","UNICODE","UNINSTALL","UNION","UNIQUE","UNKNOWN","UNLOCK","UNSIGNED","UNTIL","UPDATE","UPGRADE","USAGE","USE","USER","USER_RESOURCES","USE_FRM","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALUE","VALUES","VARBINARY","VARCHAR","VARCHARACTER","VARIABLES","VARYING","VIEW","WAIT","WARNINGS","WEEK","WHEN","WHERE","WHILE","WITH","WORK","WRAPPER","WRITE","X509","XA","XML","XOR","YEAR","YEAR_MONTH","ZEROFILL","ERROR","FRAC_SECOND","GENERAL","IGNORE_SERVER_IDS","INNOBASE","INNODB","MASTER_HEARTBEAT_PERIOD","PROXY","RELAY","SLOW","SQL_TSI_FRAC_SECOND","CATALOG_NAME","CLASS_ORIGIN","COLUMN_NAME","CONSTRAINT_CATALOG","CONSTRAINT_NAME","CONSTRAINT_SCHEMA","CURSOR_NAME","ERROR","GENERAL","IGNORE_SERVER_IDS","MASTER_HEARTBEAT_PERIOD","MESSAGE_TEXT","MYSQL_ERRNO","PROXY","RELAY","RELAYLOG","RESIGNAL","SCHEMA_NAME","SIGNAL","SLOW","SUBCLASS_ORIGIN","TABLE_NAME","XML","FRAC_SECOND","INNOBASE","INNODB","SQL_TSI_FRAC_SECOND"]
</code></pre>

<p>&nbsp;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Parse CSV Into JSON in Node.JS]]></title>
    <link href="http://www.bootdb.com/parse-csv-into-json-in-node-js/"/>
    <updated>2016-11-08T06:24:41+05:30</updated>
    <id>http://www.bootdb.com/parse-csv-into-json-in-node-js</id>
    <content type="html"><![CDATA[<p><a href="https://www.npmjs.com/package/csvtojson">csvtojson</a> is a perfect library to convert CSV to JSON, if support&#8217;s api &amp; as a command line tool.</p>

<p>Consider a sample csv as data.csv:</p>

<pre><code>TIMESTAMP,UPDATE,UID,BYTES SENT,BYTES RCVED
1395426422,n,10028,1213,5461
1395426422,n,10013,9954,13560
</code></pre>

<h3>Install csvtojson:</h3>

<pre><code>npm install csvtojson
</code></pre>

<h3>Using csvtojson in Node.JS:</h3>

<p>The below code will convert csv to json:</p>

<pre><code>//Converter Class 
var Converter = require("csvtojson").Converter;
var converter = new Converter({});

//end_parsed will be emitted once parsing finished 
converter.on("end_parsed", function(jsonArray) {
    console.log(jsonArray); //here is your result jsonarray 
});

//read from file 
require("fs").createReadStream("./data.csv").pipe(converter);
</code></pre>

<p>When you run the above code, you get:</p>

<pre><code>[{
    TIMESTAMP: 1395426422,
    UPDATE: 'n',
    UID: 10028,
    'BYTES SENT': 1213,
    'BYTES RCVED': 5461
}, {
    TIMESTAMP: 1395426422,
    UPDATE: 'n',
    UID: 10013,
    'BYTES SENT': 9954,
    'BYTES RCVED': 13560
}]
</code></pre>

<h3>Using csvtojson as command line:</h3>

<ol>
<li><p>Using as command: <strong>csvtojson ./myCSVFile</strong></p></li>
<li><p>Pipe the output: <strong>cat myCSVFile | csvtojson</strong></p></li>
</ol>

]]></content>
  </entry>
  
</feed>
